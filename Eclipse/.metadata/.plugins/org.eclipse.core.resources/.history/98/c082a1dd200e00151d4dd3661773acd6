
/*Path:
    Path(String absPath)
    cd(String path)
    String getAbsPath()

"/a/b"

"/x/y/z" -> "/x/y/z"
"./x/y/z" -> "/a/b/x/y/z"
"x/y/z"   -> "/a/b/x/y/z"
"x/../../z" ->  "/a/z"
"/a/x/./././///z" -> "/a/x/z"*/

package com.amit.utils;

import java.util.Stack;

public class Path
{
    public Path(String absPath)
    {
    	this();
    	String a[] = absPath.split("/");
        for(String t:a)
           absolutePath.push(t);      
    }
    
    private Path()
    {
    	absolutePath = new Stack<String>();
    }
    
    
    
    
    public String cd(String newPath)
    {
       String [] t= newPath.split("/");
             
       if(t[0].equals("."))
       	   absolutePath.clear();
             
       for(int i=1;i<t.length;i++)
 	   {
 		  if(t[i].equals(".."))
 			  absolutePath.pop();
 		  else
 			  absolutePath.push(t[i]);
 	   }
       
       String returnPath = "/";
       
       for(int i= absolutePath.size() -1 ;i > 0 ;i--)
             returnPath = returnPath + absolutePath.get(i) +"/";
              
       return returnPath;
      }
    
    private Stack<String> absolutePath;
    
}




